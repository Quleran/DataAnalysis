import pandas as pd
import matplotlib.pyplot as plt

"""
1. Загрузите данные из файла «athlete_events.csv» о спортсменах – участниках
олимпийских игр (ОИ).
Данные содержат следующие признаки:
ID – уникальный идентификатор спортсмена
Name – имя спортсмена
Sex – пол (M – мужской, F – женский)
Age – возраст (полных лет, целое число)
Height – рост в сантиметрах
Weight – вес в килограммах
Team – название команды (страны)
NOC – трехбуквенное обозначение страны (по стандарту МОК)
Games – год и вид ОИ (летние или зимние)
Year – год проведения ОИ
Season – вид ОИ (летние или зимние)
City – город проведения ОИ
Sport – вид спорта
Event – соревнование (дисциплина)
Medal – завоеванная медаль (Gold, Silver, Bronze или NA)
"""
DataFrame = pd.read_csv('datasets/athlete_events.csv')


"""
2. Определите количество значений каждого из признаков в загруженных
данных. По каким значениям имеются не все данные? По какому
значению отсутствующих данных больше всего?
Подсказка: воспользуйтесь функцией count или info.
"""
print(f'2. Информация по признакам:')
DataFrame.info()
print()
print(DataFrame.count())


"""
3. Выведите статистическую информацию
стандартное отклонение, минимальное и максимальное значение,
значение квартилей) по полям: возраст, рост, вес. Подсказка:
воспользуйтесь функцией describe.
"""
df_3 = DataFrame[['Age', 'Height', 'Weight']].describe()
print(f'\n3. Статистическая информация: \n{df_3}')


"""
4.1 Сколько лет было самому молодому участнику олимпийских игр в
1992 году? Как звали этого участника и в какой дисциплине он(а)
участвовал(а)?
"""
df_1992 = DataFrame[DataFrame['Year'] == 1992]
participant = df_1992.loc[df_1992['Age'].idxmin()]
print(f'\n4.1 Самый молодой участник олимпийских игр: \n{participant}')


"""
4.2 Выведите список всех видов спорта, которые когда-либо входили в
программу олимпийских игр. (Каждый вид спорта должен
присутствовать в списке один раз.)
"""
all_sports = DataFrame['Sport'].unique()
print(f'\n4.2 Уникальных видов спорта: \n{all_sports}')


"""
4.3 Каков средний рост теннисисток (пол – женский, вид спорта –
большой теннис), участвовавших в играх 2000 года?
"""
tennis_2000 = DataFrame[
    (DataFrame['Year'] == 2000) &
    (DataFrame['Sport'] == 'Tennis') &
    (DataFrame['Sex'] == 'F')
]
avg_height_tennis = tennis_2000['Height'].mean()
print(f'\n4.3 Средний рост теннисисток в 2000 году: {avg_height_tennis:.2f} см')


"""
4.4 Сколько золотых медалей в настольном теннисе выиграл Китай
на ОИ в 2008 году?
"""
tennis_2008 = DataFrame[
    (DataFrame['Year'] == 2008) &
    (DataFrame['NOC'] == 'CHN') &
    (DataFrame['Sport'] == 'Table Tennis') &
    (DataFrame['Medal'] == 'Gold')
]
print(f'\n4.4 Золотых медалей Китая в настольном теннисе в 2008 году: {len(tennis_2008)}')


"""
4.5 Как изменилось количество видов спорта на летних ОИ в 2004 году
по сравнению с летними ОИ в 1988 году?
"""
sports_1988 = DataFrame[
    (DataFrame['Year'] == 1988) &
    (DataFrame['Season'] == 'Summer')]['Sport'].nunique()
sports_2004 = DataFrame[
    (DataFrame['Year'] == 2004) &
    (DataFrame['Season'] == 'Summer')]['Sport'].nunique()
sports_change = sports_2004 - sports_1988
print(f'\n4.5 Изменение количества видов спорта на летних ОИ:')
print(f'1988 год: {sports_1988} видов спорта')
print(f'2004 год: {sports_2004} видов спорта')
print(f'Изменение: {sports_change}')


"""
4.6 Постройте гистограмму распределения возраста мужчин-
керлингистов (Sport == ‘Curling’), участвовавших в олимпиаде 2014года.
Подсказка:
для построения гистограммы можно
использовать функцию hist()
из библиотеки matplotlib с
параметрами по умолчанию (либо можете использовать любую
другую функцию на свое усмотрение).
"""
dt_year_2014 = DataFrame[DataFrame['Year'] == 2014]
dt_sport_curling = dt_year_2014[dt_year_2014['Sport'] == 'Curling']
dt_man = dt_sport_curling[dt_sport_curling['Sex'] == 'M']

plt.hist(dt_man['Age'])
plt.grid()
plt.show()


"""
4.7 Рассмотрим зимнюю олимпиаду 2006 года. Сгруппируйте данные
по стране (используйте признак «NOC») и посчитайте для каждой
страны количество завоеванных медалей и средний возраст
спортсменов. Выведите только те страны, которые завоевали хотя
бы одну медаль.
"""
winter_2006 = DataFrame[(DataFrame['Year'] == 2006) & (DataFrame['Season'] == 'Winter')]
winter_2006_medals = winter_2006.dropna(subset=['Medal'])
country_stats_2006 = winter_2006.groupby('NOC').agg({
    'Medal': lambda x: x.notna().sum(),  # количество медалей
    'Age': 'mean'  # средний возраст
})
countries_with_medals = country_stats_2006[country_stats_2006['Medal'] > 0]
print(f'\n4.7 Страны с медалями на зимней ОИ 2006 года:\n{countries_with_medals}')


"""
4.8 Продолжим рассматривать зимнюю олимпиаду 2006 года.
Посчитайте, сколько медалей каждого достоинства завоевала
каждая из стран-участниц (страны, не завоевавшие ни одной
медали, можно не выводить). Для этого сгруппируйте данные по
стране и по виду медали. Представьте данные в виде сводной
таблицы (pivot_table). В сводной таблице не должно быть
отсутствующих значений (NaN), замените их на 0
"""
medals_2006 = winter_2006_medals.pivot_table(
    index='NOC',
    columns='Medal',
    values='ID',
    aggfunc='count',
    fill_value=0
)

medals_2006 = medals_2006[['Gold', 'Silver', 'Bronze']]
print(f'\n4.8 Сводная таблица медалей по странам на зимней ОИ 2006 года:\n{medals_2006}')
